rm(list = ls())  # Clear workspace
# Load required libraries
library(dplyr)
library(readr)
library(tidyverse)
library(ggplot2)
library(data.table)
library(pROC)
# Creating data frame of all 20 subjects
folder_path <- "C:/Users/LENOVO/Desktop/R/Final_Work/data"
files <- list.files(path = folder_path, pattern = "\\.csv$", full.names = TRUE)
df <- files |>
map_df(~ read_csv(.x, col_types = cols(.default = "c"), show_col_types = FALSE) |>
mutate(file_name = basename(.x)))
# Ensure all required columns exist
required_columns <- c("contrast", "WMresp_acc", "PASkey.keys", "session", "participant")
missing_columns <- setdiff(required_columns, names(df))
if (length(missing_columns) > 0) {
stop("Missing columns in dataset: ", paste(missing_columns, collapse = ", "))
}
# Select relevant columns and remove rows with missing values
df <- df |>
select(all_of(required_columns)) |>
filter(!if_any(everything(), is.na))
# Fix participant naming
df <- df |>
mutate(participant = recode(participant, "P1" = "1")) |>
mutate(participant = as.numeric(participant)) |>  # Convert to numeric
arrange(participant)
# Convert multiple columns to numeric
df <- df |>
mutate(WMresp_acc = as.numeric(WMresp_acc)) |>
mutate(PASkey.keys = as.numeric(PASkey.keys)) |>#PAS temporarily defined as numeric because I wanted to calculate mean and SE in the descriptive part, in the regression it will be change to factor
mutate(contrast = as.numeric(contrast))
# Save processed data
save(df, file = "C:/Users/LENOVO/Desktop/R/Final_Work/df.rdata")
# No need to remove duplicate rows because in this dataset,
# Load the data set
load("C:/Users/LENOVO/Desktop/R/Final_Work/df.rdata")
# Compute descriptive statistics (Mean & SE)
summary_stats <- df |>
summarise(
PAS_Mean = mean(PASkey.keys), PAS_SE = sd(PASkey.keys) / sqrt(n()),
WM_Mean = mean(WMresp_acc), WM_SE = sd(WMresp_acc) / sqrt(n()),
Contrast_Mean = mean(contrast), Contrast_SE = sd(contrast) / sqrt(n())
)
# Create a summary table with rounded values
summary_table <- data.frame(
Variable = c("PAS Score", "WM Accuracy", "Contrast"),
Mean = round(c(summary_stats$PAS_Mean, summary_stats$WM_Mean, summary_stats$Contrast_Mean), 3),
SE = round(c(summary_stats$PAS_SE, summary_stats$WM_SE, summary_stats$Contrast_SE), 3)
)
# Display the table using kable
kable(summary_table, caption = "Summary Statistics: Mean and Standard Error")
library(knitr)
source("C:/Users/LENOVO/Desktop/R/Final_Work/final_work_pre_proccessing.R")
library(scales)
source("C:/Users/LENOVO/Desktop/R/Final_Work/final_work_pre_proccessing.R")
source("C:/Users/LENOVO/Desktop/R/Final_Work/final_work_pre_proccessing.R")
source("C:/Users/LENOVO/Desktop/R/Final_Work/final_work_pre_proccessing.R")
